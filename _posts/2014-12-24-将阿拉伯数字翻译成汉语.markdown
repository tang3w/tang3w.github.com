---
layout: post
title: "将阿拉伯数字翻译成汉语"
published: true
---

最近遇到一个问题，需要把阿拉伯数字翻译成汉语。下面是我用 JavaScript 语言实现的方法：

```javascript
// Copyright 2014 Tianyong Tang

var num2zh = (function(){
  var splice  = Array.prototype.splice;
  var unitMap = ['', '十', '百', '千', '万'];
  var numMap  = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];

  return function (num) {
    var arr  = [];
    var str  = String(num);
    var skip = false;
    var bit  = 0;

    for (var i = str.length - 1, pos = 1; i >= 0; --i, ++pos) {
      if (pos % 5 === 0) {
        arr.push(unitMap[4]);
        pos = 1;
      }

      bit = parseInt(str[i], 10);

      if (bit !== 0) {
        arr.push(unitMap[pos % 10 - 1], numMap[bit]);
        skip = false;
      } else if (pos > 1 && !skip || i === 0) {
        arr.push(numMap[bit]);
      }

      if (bit === 0) {
        skip = true;
      }
    }

    var across = 0;

    for (var j = 0, len = arr.length; j < len; ++j) {
      if (arr[j] === '万') {
        across += 1;
        if (across % 2 === 0) {
          var dual = arr[j - 1] === '万';
          var range = [dual ? j - 1 : j, dual ? 2 : 1];
          splice.apply(arr, range.concat(['亿']));
          if (dual) {
            len -= 1;
            j -= 1;
          }
        }
      }
    }

    var result = arr.reverse().join('');

    if (result.indexOf('一十') === 0) {
      result = result.substr(1);
    }

    return result;
  };
}());

console.log(num2zh('1002019988'));
// ^------- 十亿零二百零一万九千九百八十八

console.log(num2zh('109011102019988'));
// ^------- 一百零九万零一百一十一亿零二百零一万九千九百八十八

console.log(num2zh('100000000000000'));
// ^------- 一百万亿
```

它速度飞快，支持大整数，大家可以通过改变下方输入框中的数字来测试一下：

<input type="text" style="height: 30px; width: 200px; font-size: 14px; padding: 0 5px;" id="arab"><br/>
<span id="zh" style="color: #999988; font-style: italic; display: block; height: 80px; margin-top: 10px; overflow: auto;"></span>

<script src="//cdn.staticfile.org/jquery/1.9.1/jquery.js"></script>

<script type="text/javascript">
// Copyright 2014 Tianyong Tang

var num2zh = (function(){
  var splice  = Array.prototype.splice;
  var unitMap = ['', '十', '百', '千', '万'];
  var numMap  = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];

  return function (num) {
    var arr  = [];
    var str  = String(num);
    var skip = false;
    var bit  = 0;

    for (var i = str.length - 1, pos = 1; i >= 0; --i, ++pos) {
      if (pos % 5 === 0) {
        arr.push(unitMap[4]);
        pos = 1;
      }

      bit = parseInt(str[i], 10);

      if (bit !== 0) {
        arr.push(unitMap[pos % 10 - 1], numMap[bit]);
        skip = false;
      } else if (pos > 1 && !skip || i === 0) {
        arr.push(numMap[bit]);
      }

      if (bit === 0) {
        skip = true;
      }
    }

    var across = 0;

    for (var j = 0, len = arr.length; j < len; ++j) {
      if (arr[j] === '万') {
        across += 1;
        if (across % 2 === 0) {
          var dual = arr[j - 1] === '万';
          var range = [dual ? j - 1 : j, dual ? 2 : 1];
          splice.apply(arr, range.concat(['亿']));
          if (dual) {
            len -= 1;
            j -= 1;
          }
        }
      }
    }

    var result = arr.reverse().join('');

    if (result.indexOf('一十') === 0) {
      result = result.substr(1);
    }

    return result;
  };
}());

$(function(){
    var $arab = $('#arab');
    var $zh   = $('#zh');
    var demo  = '100861024';

    $arab.val(demo);
    $zh.text(num2zh(demo));

    $arab.on('input', function(){
        var num = $.trim($(this).val());
        var zh  = /^([1-9][0-9]*|0|)$/.test(num) ? num2zh(num) : "Bad format";

        $zh.text(zh);
    });
});
</script>

因为懒，所以没有对小数和负数的情况进行处理。如果配上数字语音库，一个会念中文数字的程序就诞生了。
