---
layout: post
title: "Ruby 的一些重要特性"
published: false
categories:
- Ruby
---

### 类是开放的

在 Ruby 中，类不是封闭的，它是*可修改的*（mutable）。你可以重新打开它们来添加方法和常量。这适用于所有类，包括标准库和核心库中的类。`class` 关键字用来打开一个类，并把你带到类的上下文中，让你可以修改类的定义。这种技术简单称之为*打开类*。

打开类如此的强大，可以让你任意修改类的行为。但如果滥用，也是危险的，因为它是对程序的全局性修改，很容易带来隐患，且在代码庞大时难以追踪。有些人对这种滥用表示不满，所以给打开类取了一个不太好听的名字：*猴子补丁*（Monkey-patching）。所以，猴子补丁是一把双刃剑，要合理地运用它。

Ruby 2.0 引入了一个叫做 *Refinements* 的技术，可以把猴子补丁控制在特定的范围内，阻止它全局扩散。

### 实例变量和方法

在 Ruby 中，实例变量和类之间没有什么联系。你不需要在访问实例变量之前定义它们。Ruby 采用带 `@` 前缀的标识符来表示实例变量。要创建实例变量，只需要为它们赋值就可以了。一个对象的实例变量存在于对象本身，而一个对象的方法存在于对象的类中；换个说法，同一个类的对象共享同样的方法，但不共享实例变量。

### 万物皆对象

在 Ruby 中，类本身也是对象。和其它对象一样，它也有自己的类，这个类叫做 `Class`。`Class` 类的类就是它自己，这里出现了。因此，Ruby 中所有的类都是 `Class` 类的实例，包括 `Class` 类本身。

### 对象模型




